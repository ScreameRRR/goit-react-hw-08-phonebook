{"version":3,"file":"static/js/RegisterView.3b2e2197.chunk.js","mappings":"mPAmHA,EA/GiB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MAEF,IAAK,QACHN,EAASM,GACT,MAEF,IAAK,WACHJ,EAAYI,KA4ClB,OACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAMd,SAtCW,SAAAU,GACnBA,EAAEK,iBAEGd,GAAYE,EAKZE,EAIAE,EAKDA,EAASS,OAAS,EACpBC,EAAAA,OAAAA,QAAA,gDAIEV,EAASW,SAAS,YACpBD,EAAAA,OAAAA,QAAA,iDAKEjB,EADJC,EACa,CAAEI,MAAAA,EAAOE,SAAAA,GACT,CAAEJ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAE5BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KApBVS,EAAAA,OAAAA,QAAe,gCAJfA,EAAAA,OAAAA,QAAe,6BALfA,EAAAA,OAAAA,QAAe,6BAkCf,WACIhB,IACA,UAACa,EAAA,QAAD,CAAYK,UAAU,OAAOC,UAAU,OAAvC,WACE,SAACN,EAAA,QAAD,CAAYO,OAAO,KAAnB,oBACA,SAACP,EAAA,UAAD,CACEQ,KAAK,KACLnB,KAAK,OACLoB,KAAK,OACLC,YAAY,aACZf,SAAUA,EACVG,MAAOT,QAKb,UAACW,EAAA,QAAD,CAAYK,UAAU,OAAOC,UAAU,QAAvC,WACE,SAACN,EAAA,QAAD,CAAYO,OAAO,KAAnB,qBACA,SAACP,EAAA,UAAD,CACEQ,KAAK,KACLnB,KAAK,QACLoB,KAAK,QACLC,YAAY,cACZf,SAAUA,EACVG,MAAOP,QAIX,UAACS,EAAA,QAAD,CAAYK,UAAU,OAAOC,UAAU,WAAvC,WACE,SAACN,EAAA,QAAD,CAAYO,OAAO,KAAnB,uBACA,SAACP,EAAA,UAAD,CACEQ,KAAK,KACLnB,KAAK,WACLoB,KAAK,WACLC,YAAY,WACZf,SAAUA,EACVG,MAAOL,QAIX,SAACkB,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,SAA/B,2B,oGC1FR,UAVqB,WACnB,IAAMI,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,eACzBC,GAAWC,EAAAA,EAAAA,MAIjB,OAAIJ,GAAmB,SAAC,KAAD,CAAUK,GAAIC,EAAAA,EAAAA,SAAAA,cAC9B,SAAC,IAAD,CAAUjC,SAHA,SAAAkC,GAAI,OAAIJ,EAASK,EAAAA,GAAAA,OAAsBD,KAGnBjC,SAAS","sources":["components/AuthForm/AuthForm.js","views/RegisterView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Container, Form } from 'react-bootstrap';\nimport { Notify } from 'notiflix';\n\nconst AuthForm = ({ onSubmit, isLogIn }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (!isLogIn && !name) {\n      Notify.failure('Enter your name, please!');\n      return;\n    }\n\n    if (!email) {\n      Notify.failure('Enter your email, please!');\n      return;\n    }\n    if (!password) {\n      Notify.failure('Enter your password, please!');\n      return;\n    }\n\n    if (password.length < 7) {\n      Notify.failure(`Password should contain more then 7 symbols!`);\n      return;\n    }\n\n    if (password.includes('password')) {\n      Notify.failure(`Password shouldn't contain word \"password\"!`);\n      return;\n    }\n\n    isLogIn\n      ? onSubmit({ email, password })\n      : onSubmit({ name, email, password });\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={onFormSubmit}>\n        {!isLogIn && (\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label column=\"lg\">Name:</Form.Label>\n            <Form.Control\n              size=\"lg\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Enter name\"\n              onChange={onChange}\n              value={name}\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label column=\"lg\">Email:</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={onChange}\n            value={email}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label column=\"lg\">Password</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={onChange}\n            value={password}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm';\nimport mainRoutes from 'constants/routes/mainRoutes';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from 'redux/auth';\n\nconst RegisterView = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const dispatch = useDispatch();\n\n  const onSubmit = user => dispatch(authOperations.signUp(user));\n\n  if (isLoggedIn) return <Navigate to={mainRoutes.register.redirectTo} />;\n  return <AuthForm onSubmit={onSubmit} isLogIn={false} />;\n};\n\nexport default RegisterView;\n"],"names":["onSubmit","isLogIn","useState","name","setName","email","setEmail","password","setPassword","onChange","e","target","value","Container","Form","preventDefault","length","Notify","includes","className","controlId","column","size","type","placeholder","Button","variant","isLoggedIn","useSelector","authSelectors","dispatch","useDispatch","to","mainRoutes","user","authOperations"],"sourceRoot":""}