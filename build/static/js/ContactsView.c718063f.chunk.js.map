{"version":3,"file":"static/js/ContactsView.c718063f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Section/Section.styled.js","components/Section/Section.js","views/ContactsView.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ContactFormStyled = styled.div`\n  form {\n    border: 1px solid black;\n    padding: 20px;\n    width: fit-content;\n  }\n  label {\n    display: block;\n  }\n  input {\n    display: block;\n    margin-bottom: 20px;\n  }\n  }\n`;\n\nexport default ContactFormStyled;\n","import React, { useState } from 'react';\nimport ContactFormStyled from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { Button, Form } from 'react-bootstrap';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(contactsOperations.addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactFormStyled>\n      <Form name=\"contact\" onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label column=\"lg\">Name</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"number\">\n          <Form.Label column=\"lg\">Number</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Form.Group>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </ContactFormStyled>\n  );\n};\n\nexport default ContactForm;\n","import { PropTypes } from 'prop-types';\nimport React from 'react';\nimport { Button, ListGroup } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const onDelete = () => dispatch(contactsOperations.deleteContacts(id));\n\n  return (\n    <ListGroup.Item\n      as=\"li\"\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <span>\n        {name}: {number}\n      </span>\n      <Button onClick={onDelete} type=\"button\">\n        Delete\n      </Button>\n    </ListGroup.Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import React, { useEffect } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport ContactItem from './ContactItem';\n\nconst ContactList = () => {\n  const items = useSelector(contactsSelectors.getFilteredItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  return (\n    <ListGroup as=\"ol\">\n      {items.map(item => (\n        <ContactItem key={item.id} contact={item} />\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst FilterStyled = styled.div`\n  label {\n    display: block;\n    margin-bottom: 10px;\n  }\n`;\n\nexport default FilterStyled;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, getFilter } from 'redux/contacts/filter';\nimport FilterStyled from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = ({ target }) => {\n    const { value } = target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <FilterStyled>\n      <Form.Group className=\"mb-3\" controlId=\"filter\">\n        <Form.Label column=\"lg\">Find contacts by name</Form.Label>\n        <Form.Control\n          size=\"lg\"\n          type=\"text\"\n          value={filter}\n          onChange={onChange}\n          name=\"filter\"\n        />\n      </Form.Group>\n    </FilterStyled>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst SectionStyled = styled.section`\n  padding-left: 50px;\n  margin-bottom: 30px;\n  padding-top: 20px;\n\n  h1 {\n    margin: 0;\n    margin-bottom: 20px;\n  }\n`;\n\nexport default SectionStyled;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport SectionStyled from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      {title && <h1>{title}</h1>}\n      {children}\n    </SectionStyled>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Section from 'components/Section';\nimport mainRoutes from 'constants/routes/mainRoutes';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { authSelectors } from 'redux/auth';\n\nconst ContactsView = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  if (!isLoggedIn) return <Navigate to={mainRoutes.contacts.redirectTo} />;\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"names":["styled","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","value","Form","onSubmit","preventDefault","contactsOperations","className","controlId","column","size","onChange","type","pattern","title","required","Button","contact","id","ListGroup","as","style","display","justifyContent","alignItems","onClick","items","useSelector","contactsSelectors","useEffect","map","item","filter","getFilter","changeFilter","children","authSelectors","to","mainRoutes"],"sourceRoot":""}